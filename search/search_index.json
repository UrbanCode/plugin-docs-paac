{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<ul> <li> <p>'Devops Deploy' processes allows a user to automate a set of repeatable tasks in a orderly fashion and execute them on configured target machines.</p> </li> <li> <p>Processes can be configured at 3 places in the product, 'Application', 'Component' , 'Processes' and the processes configured here are termed as 'application process', 'component process', 'generic process' respectively.</p> </li> <li> <p>The aim of this project/tool is to allow users to configure their processes in a source code repo like GIT and make it their single source truth and place for users to collaborate to enhance their processes. </p> </li> <li> <p>This tool currently allows users to use json format to define processes and works with existing processes in 'Devops Deploy'.</p> </li> </ul>"},{"location":"#history","title":"History","text":""},{"location":"#version-10-beta","title":"Version 1.0-Beta","text":"<ul> <li>Initial release</li> </ul>"},{"location":"Integrations/","title":"Integrations","text":""},{"location":"Integrations/#steps-to-integrate-paac-with-devops-deploy-using-jenkins","title":"Steps to Integrate PAAC with DevOps Deploy using Jenkins","text":""},{"location":"Integrations/#problem-statement","title":"Problem Statement:","text":"<p>Need to update an existing process stored in GitHub in JSON format to DevOps Deploy. The process can be of any type: Generic, Component, or Application.</p>"},{"location":"Integrations/#illustration-of-an-integration-architecture","title":"Illustration of an Integration Architecture","text":""},{"location":"Integrations/#prerequisites","title":"Prerequisites:","text":"<ul> <li>A up and running Jenkins instance.</li> <li>The PAAC CLI should be present on the machine where the Jenkins server is installed.</li> <li>Permissions to update the process being worked on.</li> </ul>"},{"location":"Integrations/#configurations-needed-in-jenkins","title":"Configurations Needed in Jenkins:","text":"<ol> <li> <p>Create a New Freestyle Project    In Jenkins, create a new Freestyle project. Name it something like \"Import-process-from-git\".</p> </li> <li> <p>Configure the Source Code Management Section    Add the Git credentials where the processes are stored. </p> </li> <li> <p>Configure the Build Triggers Section    Check the \"Poll SCM\" checkbox.    In the \"Schedule\" text box, provide <code>* * * * *</code> to poll for changes every minute from the Git repo. </p> </li> <li> <p>Configure the Build Steps Section    Add an \"Execute Shell\" option.    In the \"Execute Shell\" command box, change the current working directory to the directory where the PAAC CLI is present.    Then execute the command (refer to the List of All Commands section) according to the type of process you're working with. </p> </li> <li> <p>Make Changes to Your JSON File    Use any IDE to make changes to the JSON file and push the changes to GIT.</p> </li> <li> <p>Jenkins Polling and Job Trigger    Once changes are merged to the main or master branch (depending on your setup in step 2), Jenkins will poll the repository and trigger a job.    This will result in updating the process in DevOps Deploy.</p> </li> </ol>"},{"location":"Limitations/","title":"Limitations","text":""},{"location":"Limitations/#with-version-paac-0101171817-betazip","title":"With version paac-0.1.0.1171817-beta.zip","text":"<ul> <li>Quotes are not supported in step-names. Such processes may be downloaded but their integrity is questionable.</li> <li>New processes cannot be created in this version.</li> <li>Secured properties are not supported. To use secure properties, one may define a secure property in any entity such as component, environment, resource etc and refer that property name in the process property</li> <li>Post-processing Scripts are not fully supported. (What I mean by it is we do not store those scripts in separate files like we do for shell step and groovy steps, so the script may not be in a desirable format)</li> <li>Limited support for modifying tags. Tags can only be seen by their uuid and not by their real user-defined names</li> </ul>"},{"location":"downloads/","title":"Downloads","text":"<ul> <li>paac-0.1.0.1171817-beta.zip</li> </ul>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#list-of-all-commands","title":"List of All Commands:","text":"<ul> <li> <p>Download a Generic Process Syntax: <code>download-generic-process &lt;username&gt; &lt;password&gt; &lt;server-url&gt; &lt;process-name&gt; &lt;output-file&gt;</code> Example: <code>download-generic-process myuser mypassword https://url:8443 myGenericProcessName myGenericProcess.json</code></p> </li> <li> <p>Download a Component Process Syntax: <code>download-component-process &lt;username&gt; &lt;password&gt; &lt;server-url&gt; &lt;component-process-name&gt; &lt;component-name&gt; &lt;output-file&gt;</code> Example: <code>download-component-process myuser mypassword https://url:8443 myComponentProcessName myComponentName myComponentProcess.json</code></p> </li> <li> <p>Download an Application Process Syntax: <code>download-application-process &lt;username&gt; &lt;password&gt; &lt;server-url&gt; &lt;application-process-name&gt; &lt;application-name&gt; &lt;output-file&gt;</code> Example: <code>download-application-process myuser mypassword https://url:8443 myApplicationProcessName myApplicationName myApplicationProcess.json</code></p> </li> <li> <p>Upload a Generic Process Syntax: <code>upload-generic-process &lt;username&gt; &lt;password&gt; &lt;server-url&gt; &lt;process-name&gt; &lt;input-file&gt;</code> Example: <code>upload-generic-process myuser mypassword https://url:8443 myGenericProcessName myGenericProcess.json</code></p> </li> <li> <p>Upload a Component Process Syntax: <code>upload-component-process &lt;username&gt; &lt;password&gt; &lt;server-url&gt; &lt;component-process-name&gt; &lt;component-name&gt; &lt;input-file&gt;</code> Example: <code>upload-component-process myuser mypassword https://url:8443 myComponentProcessName myComponentName myComponentProcess.json</code></p> </li> <li> <p>Upload an Application Process Syntax: <code>upload-application-process &lt;username&gt; &lt;password&gt; &lt;server-url&gt; &lt;application-process-name&gt; &lt;application-name&gt; &lt;input-file&gt;</code> Example: <code>upload-application-process myuser mypassword https://url:8443 myApplicationProcessName myApplicationName myApplicationProcess.json</code></p> </li> </ul>"},{"location":"usage/#structure-of-process-file","title":"Structure of Process file","text":"<ul> <li> <p>A process file has below a structure   <code>json5   {     \"processType\": \"[ generic|component|application] \",     \"processName\": \"&lt;name of the process&gt;\",     \"parent\": \"[ | &lt;component-name&gt; | &lt;application-name&gt;]\",     \"process\": {           \"&lt;...json body of the process steps ...&gt;\"       }   }</code></p> </li> <li> <p>A process in the above structure is mapped to a json that has multiple process step definitions. there are multiple types of steps that are supported in  Devops Deploy </p> </li> </ul>"},{"location":"usage/#process-step-definitions","title":"Process step definitions","text":"<ul> <li> <p>'Devops-Deploy' processes are composed of different steps that are made up of json. The steps ideally start from the 'Start' step and terminate at the last user defined step. Unlike in the UI, there's no need for an explicit 'Finish' step.</p> </li> <li> <p>There are different types of steps and many of them are contextual in nature and may not apply to all types of processes. One way to verify is to see if the step you are trying to add is available in the palette in the process design page in the UI</p> </li> <li> <p>The structure of a step is composed of step-data that defines the type of step and its attributes and the step workflow data that tells what is the target of the step upon successful (or) unsuccessful termination of the step. Target can be another defined step or be the finish step.</p> </li> </ul> <pre><code>  { \n    \"&lt;name of the step&gt;\" : {\n         \" ..step data.. \"\n         \"  ..\"\n         \"  ..\"\n      },\n      \"on\" : {\n          \"..step Termination events data..\"\n      }\n    }\n\n</code></pre>"},{"location":"usage/#termination-events","title":"Termination Events","text":"<p>The step termination event (or) step workflow data tells the target of the current step. The 3 valid terminations events are 1. success - upon successful completion of this step 2. failure - upon unsuccessful completion of this step 3. complete  - upon completion of the current step irrespective of successful or unsuccessful execution</p> <ul> <li>The events contain data to complete the workflow by defining what the next step is post the completion of the current step. the events can either start an array of one or more steps defined in the process or can terminate at the finish  step</li> </ul>"},{"location":"usage/#termination-event-examples","title":"Termination event Examples","text":"<ol> <li>Example of events calling other steps in successful and unsuccessful scenarios of the current step    ```json5     {        \"on\" : {         \"success\" : {             \"start\" : [\"some-step\", \"some other step\"]         },         \"failure\" : {             \"start\" : [\"handle error condition step\"]         }       }     }</li> </ol> <p><code>2. Examples of events calling the finish step</code>json5    {     \"on\" : {       \"success\" : {           \"finish\" : \"\"         }      }    }</p> <p>```</p> <p>```json5     {       \"on\": {         \"success\": {           \"finish\":\"\"         }       }     }</p> <p><code></code>json5     {        \"on\" : {          \"success\": {            \"start\": [              \"start-server\"            ]          },          \"failure\": {            \"finish\": \"\"          }        }     }   ```</p> <p>Note that in the above examples the finish attribute has no value. The finish step does not need a definition and hence there is no need for a target step value.</p>"},{"location":"usage/#step-definitions-types-with-syntax-and-examples","title":"Step Definitions Types with syntax and examples","text":"<p>Most of the process steps are explained in https://www.ibm.com/docs/en/devops-deploy/8.0.1?topic=processes-process-steps-reference</p>"},{"location":"usage/#plugin-step","title":"Plugin Step","text":"<p>The most common step and ubiquitously found step type in Devops Deploy processes. It can submit different types of plugin based on the name of the plugin and the command the plugin has in it.</p> <ul> <li> <p>Syntax   ```json5   {</p> <p>\"\": {       \"type\": \"plugin\",       \"plugin\": \"\",       \"command\": \"\",       \"properties\": {                       .           .           .                  },       \"on\": {           \"success\": {               \"start\": [                   \"\"               ]           },           \"failure\": {               \"start\" : [                      \"\",                      \"\",               ]           }       }   }   } <p><code>- Example</code>json5      {        \"Download Artifacts for zOS\": {          \"type\": \"plugin\",          \"plugin\": \"UrbanCode Deploy Versioned File Storage\",          \"command\": \"Download Artifacts for zOS\",          \"properties\": {             \"directoryOffset\": \".\",             \"versionId\": \"${p:version.id}\",             \"versionName\": \"${p:version.name}\",             \"serverUrl\": \"${p:server.url}\",             \"compId\": \"${p:component.id}\",             \"repositoryType\": \"${p?:version\\/ucd.repository.type}\",             \"resourceId\": \"${p:resource.id}\",             \"maxMemory\": \"1G\"          },          \"on\": {             \"success\": {                 \"start\": [                     \"c14c031a12ebca72796dbdca98fec0\"                 ]             }          }       }     }   ```</p>"},{"location":"usage/#run-generic-process-step","title":"Run Generic Process Step","text":"<p>Step is available in all types of processes and is used to trigger another generic process</p> <ul> <li>Structure</li> <li> <p>Syntax     ```json5     {       \": {         \"type\": \"run-generic-process\",         \"process\": \"\",         \"resource-path\": \"${p:resource.path}\",         \"ignore-child-warnings\": false,         \"properties\": {             \"processId\": \"18f7c6c0-4a30-5b0d-ed3d-da228f4d3485\",             \"resourcePath\": \"${p:resource.path}\",             \"isIgnoreChildWarnings\": \"false\"         },         \"on\": {             \"success\": {                 \"start\": [                     \"\"                 ]             },             \"failure\": {                 \"start\" : [                        \"\",                        \"\",                 ]             }         }     } <li> <p>Example     ```json5      {        \"RUN-GENERIC-PROCESS\": {          \"type\": \"run-generic-process\",          \"process\": \"REXX\",          \"resource-path\": \"${p:resource.path}\",          \"ignore-child-warnings\": false,          \"properties\": {             \"processId\": \"18f7c6c0-4a30-5b0d-ed3d-da228f4d3485\",             \"resourcePath\": \"${p:resource.path}\",             \"isIgnoreChildWarnings\": \"false\"          },          \"on\": {             \"success\": {                 \"finish\": \"\"             }          }       }     } </p> <p>```</p> </li>"},{"location":"usage/#run-application-component-step","title":"Run application component step","text":"<ul> <li>This step is applicable within an application process to trigger another component process.</li> <li> <p>The called component process should be already defined to prevent unexpected behaviour.</p> </li> <li> <p>Syntax     ```json5       {          \"\": {             \"type\": \"application-run-component-process\",             \"component\": \"\",             \"process\": \"\",             \"select-resources-by-tag\": \"\", // optional             \"select-resources-by-changed-component-list\": { // optional               \"components\": [                  \"\"                ],                \"select-resources\": [\"with-changed-component | ALL\"]             },             \"runOnlyOnFirst\":false, // optional             \"failFast\":false,  // optional              \"maxIteration\":\"-1\",  // optional             \"isIgnoreChildWarnings\":false,  // optional             \"on\": {               \"success\": {                   \"finish\": \"\"               }           }         }      } <p><code>- Example-1</code>json5 {    \"run-component-PAC-COMP\": {       \"type\": \"application-run-component-process\",        \"component\": \"PAC-COMP\",       \"process\": \"deploy-war-to-server\",       \"runOnlyOnFirst\":false,       \"failFast\":false,       \"maxIteration\":\"-1\",       \"isIgnoreChildWarnings\":false,       \"on\": {           \"success\": {               \"finish\": \"\"           }       }    }    }    <code>- Example-2 : with minimal fields</code>json5 {   \"run-component-PAC-COMP\": {     \"type\": \"application-run-component-process\",      \"component\": \"PAC-COMP\",     \"process\": \"deploy-war-to-server\",     \"on\": {           \"success\": {               \"finish\": \"\"          }     }   } } ```</p>"},{"location":"usage/#component-run-component-process","title":"Component Run Component Process","text":"<ul> <li>This step is applicable within a component process to trigger another component process.</li> <li>The callee component process should be already defined to prevent unexpected behaviour.</li> <li>Syntax     <code>json5     {         \"&lt;name of the step&gt;\": {           \"type\": \"component-run-component-process\",           \"process\": \"&lt;name of the component process&gt;\",           \"on\": {               \"success\": {                   \"finish\": \"\"               }           }       }     }</code></li> <li>Example     <code>json5     {         \"run-a-component-process\": {             \"type\": \"component-run-component-process\",             \"process\": \"LESS-COMPREHENSIVE-PROCESS\",             \"on\": {                 \"success\": {                     \"finish\": \"\"                 }             }         }     }</code></li> </ul>"},{"location":"usage/#acquire-lock-step","title":"Acquire Lock Step","text":"<ul> <li>This step acquires a lock on a specified string value. You can use locks to prevent concurrent modification of resources.</li> <li>To release the lock, use the Release lock step. Also, locks are released automatically when the process finishes.</li> <li>This step applies to application processes, component processes, and generic processes.</li> <li>Syntax   <code>json5   {     \"&lt;name of the step&gt;\": {         \"type\": \"acquire-lock\",         \"lock\": \"&lt;lock-expression&gt;\",         \"on\": {             \"success\": {                 \"start\": [                     \"&lt;next step&gt;\"                 ]             }         }      }    }</code></li> <li>Example   ```json5    {       \"acquire-lock-on-component-resource\": {         \"type\": \"acquire-lock\",         \"lock\": \"${p:component.name}-${p:componentProcess.name}-${p:resource.name}\",         \"on\": {             \"success\": {                 \"start\": [\"RUN-DB-UPGRADE-STEP\"]             }         }       }    }</li> </ul> <p>```</p>"},{"location":"usage/#release-lock-step","title":"Release Lock Step","text":"<ul> <li>This step releases a lock on a specified string value.</li> <li>This step applies to application processes, component processes, and generic processes.</li> <li>Syntax   <code>json5   {     \"&lt;name of the step&gt;\": {         \"type\": \"release-lock\",         \"lock\": \"&lt;lock-expression&gt;\",         \"on\": {             \"success\": {                 \"start\": [                     \"&lt;next step&gt;\"                 ]             }         }     }   }</code></li> <li>Example   ```json5   {       \"release-lock-on-component-resource\": {         \"type\": \"release-lock\",         \"lock\": \"${p:component.name}-${p:componentProcess.name}-${p:resource.name}\",         \"on\": {             \"success\": {                 \"start\": [                     \"DEPLOY-JAR-STEP\"                 ]             }         }       }   }</li> </ul> <p>```</p>"},{"location":"usage/#switch-step","title":"Switch Step","text":"<ul> <li>At least 1 case is required in the switch step</li> <li>Evaluate is a mandatory field that should have a property which will resolve to a case</li> <li>Applications, components, and generic processes share some process steps.</li> <li>Syntax   <code>json5   {     \"&lt;name of the step&gt;\" : {         \"type\": \"switch\",         \"evaluate\": \"&lt;property that evaluates to a switch case&gt;\",         \"case\": {             \"&lt;case-1&gt;\": {                 \"start\": [                     \"&lt;next-step&gt;\",                     \"&lt;another-step&gt;\"                 ]             },             \"&lt;case-2&gt;\": {                 \"start\": [                     \"&lt;some-other-step&gt;\"                 ]             },             \"DEFAULT\": {         // optional                     \"start\": [\"&lt;default-step&gt;\" ]             }         }      }    }</code></li> <li>Example   <code>json5   {   \"Run Necessary Shell based on Request property\" : {         \"type\": \"switch\",         \"evaluate\": \"${p:AppProcessRequestProperty}\",         \"case\": {             \"1\": {                 \"start\": [                     \"Shell-launch-server\",                     \"Shell-start-app\"                 ]             },             \"2\": {                 \"start\": [                     \"Shell-start-service\"                 ]             },             \"DEFAULT\": {                 \"start\": [                     \"shell-say-goodbye\"                 ]             }         }       }    }</code></li> </ul>"},{"location":"usage/#add-inventory-step","title":"Add inventory step","text":"<ul> <li>This step applies only to component processes.</li> <li>The component resource that the process is running against will have an inventory entry created for it with the specified status.</li> <li>Status is mandatory field</li> <li>Syntax     <code>json5     {        \"&lt;name of the step&gt;\" : {         \"type\": \"add-inventory-status\",         \"status\": \"&lt;desired-inventory-status&gt;\",         \"on\": {             \"success\": {                 \"start\": [                     \"&lt;next-step&gt;\"                 ]             }         }       }     }</code></li> <li>example   <code>json5    {     \"add-acitve-status-to-inventory\": {         \"type\": \"add-inventory-status\",         \"status\": \"Active\",         \"on\": {             \"success\": {                 \"start\": [                     \"shell-step\"                 ]             }         }      }    }</code></li> </ul>"},{"location":"usage/#remove-inventory-step","title":"Remove Inventory Step","text":"<ul> <li>This step applies only to component processes.</li> <li>The component resource that the process is running against will have an inventory entry removed from it.</li> <li>status is mandatory</li> <li>Syntax     <code>json5       {          \"&lt;name of the step&gt;\" : {           \"type\": \"remove-inventory-status\",           \"status\": \"&lt;inventory-status&gt;\",           \"on\": {             \"success\": {                 \"start\": \"&lt;next-step&gt;\"             }           }         }      }</code></li> <li>Example   <code>json5    {     \"Remove version status\":{         \"type\": \"remove-inventory-status\",         \"status\": \"active\",         \"on\": {             \"success\": {                 \"start\": \"shell-step\"             }         }       }     }</code></li> </ul>"},{"location":"usage/#add-warning-step","title":"Add warning Step","text":"<ul> <li>message is mandatory</li> <li>Syntax     <code>json5     {     \"&lt;name of the step&gt;\" : {         \"type\": \"add-process-warning\",         \"message\": \"Warning message here..\",         \"on\": {             \"success\": {                 \"start\": [                     \"&lt;next-step&gt;\"                 ]             }         }       }     }</code></li> <li> <p>Example     ```json5     {       \"warning about some stuff in process\": {         \"type\": \"add-process-warning\",         \"message\": \"Step may not have worked\",         \"on\": {             \"success\": {                 \"start\": [                     \"install-web-component\"                 ]             }          }        }     }</p> <p>```</p> </li> <li> <p>Syntax   ```json5        {         \"\": {             \"type\": \"join\",             \"on\": {                 \"finish\": \"\"             }         }      } <p><code>- Example</code>json5      {         \"join-step-1\": {             \"type\": \"join\",             \"on\": {                 \"finish\": \"\"             }         }      }</p> <p>```</p>"},{"location":"usage/#join-step","title":"Join step","text":"<ul> <li>The Join step merges a process so that only 1 step runs at a time.</li> <li>If any of the steps that connect to a Join step fail or do not run, the Join step causes the process to fail.</li> <li>This step applies to application processes, component processes, and generic processes.</li> </ul>"},{"location":"usage/#application-manual-task-step","title":"Application Manual task step","text":"<ul> <li>This step applies to application processes, component processes, and generic processes.</li> <li>When Deploying user or Role Restriction is not defined in JSON, then ANY-USER can approve the task</li> <li>When multiple approvals are given deploying-user takes precedence over 'role-restrictions' and 'any-user' takes last precedence</li> <li>When deployingUserOnly is set to false or not provided and roleRestrictionData is empty or not provided then 'any-user' can approve the task</li> <li>Syntax   ```json5     {         \"\": {         \"type\": \"application-manual-task\",         \"deployingUserOnly\": \"true|flase\",         \"roleRestrictionData\": {             \"roleRestrictions\": []         },         \"notification-template\": \"TaskCreated\",         \"on\": {             \"success\": {                 \"start\": [                     \"DEPLOY-BY-ROLE-MEMBERS-ENVIRONMENT\"                 ]             }         }        }     } <p><code>- Example</code>json5     {       \"AUTOMATION-ENGINEER-APPROVAL\": {         \"type\": \"application-manual-task\",         \"deployingUserOnly\": \"false\",         \"roleRestrictionData\": {             \"contextType\": \"ENVIRONMENT\",             \"roleRestrictions\": [                 \"Automation Engineer\"             ]         },         \"notification-template\": \"TaskCreated\",         \"on\": {             \"success\": {                 \"start\": [                     \"INSTALL-WEB-COMPONENT\"                 ]             }         }       }     }   ```</p>"},{"location":"usage/#run-operational-process-for-multiple-components","title":"Run operational process for multiple components","text":"<ul> <li> <p>This step applies only to application processes, including application processes that are associated with application templates.</p> </li> <li> <p>Syntax   ```json5    {       \"\": {            \"type\": \"run-operational-process-for-multiple-components\",            \"name\": \"\",            \"process\": \"\",            \"select-components-by-tag\": \"\",            \"select-resources-by-tag\":  \"\",             \"fail-fast\": false,// boolean            \"ignore-child-warnings\": false,// boolean            \"run-on-first-online-resource-only\": false, // boolean            \"max-concurrent-processes\": \"[unlimited | a positive integer]\",            \"max-concurrent-components\": \"[unlimited | a positive integer]\",            \"precondition-script\": \"\\\"TRUE\\\"\",             \"on\": {                \"success\": {                    \"finish\": \"\"                }            }        }    } <p><code>- Example-1</code>json5    {       \"OPERATIONAL-PROCESS-FOR-COMPONENTS\": {            \"type\": \"run-operational-process-for-multiple-components\",            \"name\": \"OPERATIONAL-PROCESS-FOR-COMPONENTS\",            \"process\": \"DEPLOY\",            \"select-components-by-tag\": \"18f4db6a-3bd2-49eb-e7fb-54bf51ab515e\",            \"select-resources-by-tag\": \"18fbe8da-3fd0-8fa3-1487-baa0fc330049\",            \"fail-fast\": true,            \"ignore-child-warnings\": true,            \"run-on-first-online-resource-only\": false,            \"max-concurrent-processes\": \"unlimited\",            \"max-concurrent-components\": \"100\",            \"precondition-script\": \"\\\"TRUE\\\"\",            \"on\": {                \"success\": {                    \"finish\": \"\"                }            }        }    }</p> <p>``` - Example-2</p> <p>```json5   {        \"OPERATIONAL-PROCESS-FOR-COMPONENTS\": {            \"type\": \"run-operational-process-for-multiple-components\",            \"process\": \"DEPLOY\",            \"fail-fast\": true,            \"ignore-child-warnings\": true,            \"run-on-first-online-resource-only\": false,            \"max-concurrent-processes\": \"unlimited\",            \"max-concurrent-components\": \"unlimited\",            \"on\": {                \"success\": {                    \"finish\": \"\"                }            }        }    }   </p> <p>```</p>"},{"location":"usage/#rollback-multiple-components-step","title":"Rollback Multiple Components step","text":"<ul> <li>Use this step to roll back multiple component versions to versions in a snapshot or to versions that were deployed when the process began. The multiple components are based on component tags or resource tags.</li> <li> <p>This step applies only to application processes, including application processes that are associated with application templates.</p> </li> <li> <p>Syntax  ```json5     {         \"\": {             \"type\": \"rollback-multiple-components\",             \"process\": \"\",             \"rollback-type\": \"[remove-undesired-incremental-versions | replace-with-last-deployed]\",             \"select-versions-with-inventory-status\": \"\",             \"select-components-by-tag\": \"\",             \"fail-fast\": boolean,             \"ignore-child-warnings\": boolean,             \"max-concurrent-processes\": \"[unlimited | a positive integer]\",             \"max-concurrent-components\": \"[unlimited | a positive integer]\",             \"on\": {                 \"success\": {                     \"finish\": \"\"                 }             }         } <p>```</p> <ul> <li>Example   <code>json5     {          \"rollback multiple steps\": {             \"type\": \"rollback-multiple-components\",             \"process\": \"ROLLBACK-VERSION\",             \"rollback-type\": \"remove-undesired-incremental-versions\",             \"select-versions-with-inventory-status\": \"Active\",             \"select-components-by-tag\": \"18f4db6a-3bd2-49eb-e7fb-54bf51ab515e\",             \"fail-fast\": false,             \"ignore-child-warnings\": false,             \"max-concurrent-processes\": \"unlimited\",             \"max-concurrent-components\": \"100\",             \"on\": {                 \"success\": {                     \"finish\": \"\"                 }             }         }</code></li> </ul>"},{"location":"usage/#rollback-component","title":"Rollback Component","text":"<p>This step applies only to application processes.</p> <ul> <li> <p>Syntax    <code>json5     {          \"&lt;name of the step&gt;\": {             \"type\": \"rollback-component\",             \"component\": \"&lt;component name&gt;\",             \"process\": \"&lt;component process name&gt;\",             \"rollback-type\": \"[remove-undesired-incremental-versions | replace-with-last-deployed]\",             \"select-versions-with-inventory-status\": \"&lt;a valid version inventory status, usually it is set as ACTIVE&gt;\",             \"fail-fast\": false,  // boolean             \"ignore-child-warnings\": boolean,             \"max-concurrent-processes\": \"[unlimited | a positive integer]\",             \"on\": {                 \"success\": {                     \"finish\": \"\"                 }             }         }    }</code></p> </li> <li> <p>Example    ```json5        {          \"Rollback PAC-COMP\": {             \"type\": \"rollback-component\",             \"component\": \"PAC-COMP\",             \"process\": \"DEPLOY-MYCOMP\",             \"rollback-type\": \"remove-undesired-incremental-versions\",             \"select-versions-with-inventory-status\": \"Active\",             \"fail-fast\": false,             \"ignore-child-warnings\": false,             \"max-concurrent-processes\": \"unlimited\",             \"properties\": {                 \"allowFailure\": \"false\",                 \"isIgnoreChildWarnings\": \"false\",             },             \"on\": {                 \"success\": {                     \"finish\": \"\"                 }             }         }      }</p> </li> </ul> <p>```</p>"},{"location":"usage/#uninstall-component","title":"Uninstall Component","text":"<ul> <li> <p>Applications, components, and generic processes share some process steps. This step applies only to application processes.</p> </li> <li> <p>Syntax   ```json5    {       \"\": {         \"type\": \"uninstall-component\",         \"component\": \"\",         \"process\": \"\",         \"select-versions\": \"[selected-with-process | all-versions]\",         \"select-versions-with-inventory-status\": \"\",         \"fail-fast\": boolean,         \"ignore-child-warnings\": boolean,         \"max-concurrent-processes\": \"[unlimited | a positive integer]\",         \"on\": {             \"success\": {                 \"finish\": \"\"             }         }      }    } <p><code>- Example</code>json5   {       \"Uninstall-PAC-COMP\": {         \"type\": \"uninstall-component\",         \"component\": \"PAC-COMP\",         \"process\": \"ROLLBACK\",         \"select-versions\": \"selected-with-process\",         \"select-versions-with-inventory-status\": \"Active\",         \"fail-fast\": false,         \"ignore-child-warnings\": false,         \"max-concurrent-processes\": \"unlimited\",         \"properties\": {             \"allowFailure\": \"false\",             \"isIgnoreChildWarnings\": \"false\",         },         \"on\": {             \"success\": {                 \"finish\": \"\"             }         }     }   }</p> <p>```</p>"},{"location":"usage/#uninstall-multiple-components","title":"Uninstall Multiple Components","text":"<ul> <li> <p>This step applies only to application processes, including application processes that are associated with application templates</p> </li> <li> <p>Syntax     <code>json5     {          \"&lt;name of the step&gt;\": {             \"type\": \"uninstall-multiple-components\",             \"process\": \"&lt;component process name&gt;\",             \"select-versions\": \"[selected-with-process | all-versions]\",             \"select-versions-with-inventory-status\": \"&lt;version status in inventory usually set to ACTIVE&gt;\",             \"select-components-by-tag\": \"&lt;uuid of the component tag&gt;\",             \"select-resources-by-tag\": \"&lt;uuid of the resources tag&gt;\",             \"fail-fast\": boolean,             \"ignore-child-warnings\": boolean,             \"max-concurrent-processes\": \"[unlimited | a positive integer]\",             \"max-concurrent-components\": \"[unlimited | a positive integer]\",             \"on\": {                 \"success\": {                     \"finish\": \"\"                 }             }         }     }</code></p> </li> <li>Example     <code>json5     {          \"uninstall-multiple-components\": {             \"type\": \"uninstall-multiple-components\",             \"process\": \"REMOVE-VERSION\",             \"select-versions\": \"selected-with-process\",             \"select-versions-with-inventory-status\": \"Active\",             \"select-components-by-tag\": \"18f4db6a-3bd2-49eb-e7fb-54bf51ab515e\",             \"select-resources-by-tag\": \"18fbe8da-3fd0-8fa3-1487-baa0fc330049\",             \"fail-fast\": false,             \"ignore-child-warnings\": false,             \"max-concurrent-processes\": \"[unlimited | a positive integer]\",             \"max-concurrent-components\": \"[unlimited | a positive integer]\",             \"on\": {                 \"success\": {                     \"finish\": \"\"                 }             }         }     }</code></li> </ul>"},{"location":"usage/#install-component","title":"Install Component","text":"<ul> <li> <p>This step applies only to application processes.</p> </li> <li> <p>Syntax     <code>json5     {        \"&lt;name of the step&gt;\" : {         \"type\": \"install-component\",         \"component\": \"&lt;component name&gt;\",         \"process\": \"&lt;component process name&gt;\",         \"select-versions-without-inventory-status\": \"&lt;version status in inventory usually set to ACTIVE&gt;\",         \"select-resources-by-tag\": \"&lt;uuid of the resource tag&gt;\",         \"fail-fast\": false,  // boolean         \"ignore-child-warnings\": false, // boolean          \"max-concurrent-processes\": \"[unlimited | a positive integer]\",         \"on\": {             \"success\": {                 \"finish\": \"\"             }         }       }     }</code></p> </li> <li> <p>Example     <code>json5       {           \"Install PAC-COMP\": {             \"type\": \"install-component\",             \"component\": \"PAC-COMP\",             \"process\": \"DEPLOY-MYCOMP\",             \"select-versions-without-inventory-status\": \"Active\",             \"select-resources-by-tag\": \"18fbe8da-3fd0-8fa3-1487-baa0fc330049\",             \"fail-fast\": false,             \"ignore-child-warnings\": true,             \"max-concurrent-processes\": \"unlimited\",             \"on\": {                 \"success\": {                     \"finish\": \"\"                 }             }         }       }</code></p> </li> </ul>"},{"location":"usage/#install-multiple-components","title":"Install Multiple Components","text":"<ul> <li> <p>his step applies only to application processes, including application processes that are associated with application templates.</p> </li> <li> <p>Syntax     <code>json5        {            \"&lt;name of the step&gt;\": {             \"type\": \"install-multiple-components\",             \"process\": \"&lt;component process&gt;\",             \"select-versions-without-inventory-status\": \"&lt;version status in inventory usually set to ACTIVE&gt;\",             \"select-components-by-tag\": \"&lt;uuid of the component tag&gt;\", // optional             \"select-resources-by-tag\": \"&lt;uuid of the resource tag&gt;\", // optional             \"fail-fast\": boolean,             \"ignore-child-warnings\": boolean,             \"max-concurrent-processes\": \"[unlimited | a positive integer]\",             \"max-concurrent-components\": \"[unlimited | a positive integer]\",             \"on\": {                 \"success\": {                     \"finish\": \"\"                 }             }           }        }</code></p> </li> <li> <p>Example     <code>json5        {            \"install-multiple components\": {             \"type\": \"install-multiple-components\",             \"process\": \"install-version\",             \"select-versions-without-inventory-status\": \"Active\",             \"select-components-by-tag\": \"18f4db6a-3bd2-49eb-e7fb-54bf51ab515e\",             \"select-resources-by-tag\": \"18fbe8da-3fd0-8fa3-1487-baa0fc330049\",             \"fail-fast\": false,             \"ignore-child-warnings\": false,             \"max-concurrent-processes\": \"unlimited\",             \"max-concurrent-components\": \"100\",             \"on\": {                 \"success\": {                     \"finish\": \"\"                 }             }          }        }</code></p> </li> </ul>"},{"location":"usage/#run-process-for-each-version","title":"Run process for each version","text":"<ul> <li> <p>This step applies only to application processes, including application processes that are associated with application templates.</p> </li> <li> <p>Syntax     ```json5      {         \"\": {             \"type\": \"run-process-for-each-version\",             \"component\": \"\",             \"process\": \"\",             \"fail-fast\": boolean,             \"ignore-child-warnings\": boolean,             \"run-on-first-online-resource-only\": false ,// boolean             \"max-concurrent-processes\": \"[unlimited | a positive integer]\",             \"on\": {                 \"success\": {                     \"finish\": \"\"                 }             }         }      } <p><code>- Example</code>json5  {     \"Run process for each version\": {         \"type\": \"run-process-for-each-version\",         \"component\": \"PAC-COMP\",         \"process\": \"DEPLOY-MYCOMP\",         \"fail-fast\": false,         \"ignore-child-warnings\": false,         \"run-on-first-online-resource-only\": false,         \"max-concurrent-processes\": \"unlimited\",         \"on\": {             \"success\": {                 \"finish\": \"\"             }         }     } }</p> <p>```</p>"},{"location":"usage/#run-process-for-each-agent","title":"Run process for each agent","text":"<ul> <li>This step applies only to application processes, including application processes that are associated with application templates.</li> <li> <p>A whole process is contained within this step which has its own start and finish steps.</p> </li> <li> <p>Syntax     <code>json5      {         \"&lt;name of the step&gt;\": {             \"type\": \"for-each-agent\",             \"child-process\": \"&lt;process json that has to run on each agent&gt;\",             \"tag\": [], // zero or more tag ids within quotes separated by comma             \"max-concurrent-agents\": \"[unlimited | a positive integer]\",             \"on\": {                 \"success\": {                     \"start\": [                         \"step-1\"                     ]                 }             }         }     }</code></p> </li> <li>Example     <code>json5      {         \"APPLY-CONFIG-TOAGENT\": {             \"type\": \"for-each-agent\",             \"child-process\": {                 \"start\": {                     \"type\": \"start\",                     \"start\": [                         \"APPLY CONFIG TO AGENT\"                     ]                 },                 \"APPLY CONFIG TO AGENT\": {                     \"type\": \"apply-configuration\",                     \"component\": \"PAC-COMP\",                     \"process\": \"LESS-COMPREHENSIVE-PROCESS\",                     \"fail-fast\": false,                     \"ignore-child-warnings\": false,                     \"max-concurrent-processes\": \"unlimited\",                     \"properties\": {                         \"allowFailure\": \"false\",                         \"activity.componentProcess.id\": \"19125c59-269d-43dd-4010-d6d0abc3ebad\",                         \"isIgnoreChildWarnings\": \"false\",                         \"activity.component.id\": \"19125ba9-b2b6-6b45-d6f7-9a97f4adb386\"                     },                     \"on\": {                         \"success\": {                             \"finish\": \"\"                         }                     }                 }             },             \"tag\": [],             \"max-concurrent-agents\": \"unlimited\",             \"on\": {                 \"success\": {                     \"start\": [                         \"step-1\"                     ]                 }             }         }     }</code></li> </ul>"},{"location":"usage/#run-process-for-each-resource","title":"Run process for each resource","text":"<ul> <li> <p>Syntax     ```json5     {         \"RESOURCE-TAG\": {             \"type\": \"for-each-resource-tag\",             \"child-process\": ,             \"tag\": [                 \"\"             ],             \"max-concurrent-tags\": \"1\",             \"on\": {                 \"success\": {                     \"start\": [                         \"\"                     ]                 }             }         } <p><code>- Example</code>json5 {     \"RESOURCE-TAG\": {         \"type\": \"for-each-resource-tag\",         \"child-process\": {             \"start\": {                 \"type\": \"start\",                 \"start\": [                     \"APPLY CONFIG TO RESOURCE\"                 ]             },             \"APPLY CONFIG TO RESOURCE\": {                 \"type\": \"apply-configuration\",                 \"component\": \"PAC-COMP\",                 \"process\": \"LESS-COMPREHENSIVE-PROCESS\",                 \"fail-fast\": false,                 \"ignore-child-warnings\": false,                 \"max-concurrent-processes\": \"unlimited\",                 \"on\": {                     \"success\": {                         \"finish\": \"\"                     }                 }             }         },         \"tag\": [             \"18fbe8da-3fd0-8fa3-1487-baa0fc330049\"         ],         \"max-concurrent-tags\": \"1\",         \"on\": {             \"success\": {                 \"start\": [                     \"adac686c3f11c4a23984edf190bb0f\"                 ]             }         }     }  }</p> <p>```</p>"},{"location":"usage/#apply-configuration-step","title":"Apply Configuration step","text":"<ul> <li>This step applies only to application processes.</li> <li>This step runs a component process of the type Operational (No Version Needed) or Configuration Deployment.</li> <li>Syntax     <code>json5      {          \"&lt;name of the step&gt;\": {             \"type\": \"apply-configuration\",             \"component\": \"&lt;component name&gt;\",             \"process\": \"&lt;componpent process name&gt;\",             \"fail-fast\": false, // boolean value             \"ignore-child-warnings\": false, // boolean value              \"max-concurrent-processes\": \"[unlimited | a positive integer]\",             \"on\": {                 \"success\": {                     \"finish\": \"\"                 }             }         }      }</code></li> <li>Example     <code>json5      {          \"Apply-config-operation\": {             \"type\": \"apply-configuration\",             \"component\": \"PAC-COMP\",             \"process\": \"LESS-COMPREHENSIVE-PROCESS\",             \"fail-fast\": false,             \"ignore-child-warnings\": false,             \"max-concurrent-processes\": \"unlimited\",             \"properties\": {                 \"allowFailure\": \"false\",                 \"activity.componentProcess.id\": \"19125c59-269d-43dd-4010-d6d0abc3ebad\",                 \"isIgnoreChildWarnings\": \"false\",                 \"activity.component.id\": \"19125ba9-b2b6-6b45-d6f7-9a97f4adb386\"             },             \"on\": {                 \"success\": {                     \"finish\": \"\"                 }             }         }      }</code></li> </ul>"},{"location":"usage/#generic-manual-step","title":"Generic Manual step","text":"<ul> <li>Syntax   <code>json     {       \"&lt;name of the step&gt;\": {           \"type\": \"generic-manual-task\",           \"restrict-approval-to\": {               \"[ deploying-user | identities ]\": {  \"users\": [ \"&lt;user-1&gt;\", \"&lt;user-n&gt;\"], \"groups\": [\"&lt;group-1&gt;\"] }           },           \"notification-template\": \"TaskCreated\",           \"comment-required\": false,           \"on\": {               \"success\": {                   \"finish\": \"\"               }           }        }     }</code></li> <li>When the approval restriction is set to \"deploying-user\" not value is required for that field</li> <li>Apart from setting approval to \"deploying-user\", one may also choose selected users or groups of a combination of both</li> <li>Example-1 with approval restricted to 'deploying user'    <code>json5      {        \"MANUAL-TASKS\": {            \"type\": \"generic-manual-task\",            \"restrict-approval-to\": {                \"deploying-user\": \"\"            },            \"notification-template\": \"TaskCreated\",            \"comment-required\": false,            \"on\": {                \"success\": {                    \"finish\": \"\"                }            }        }      }</code></li> <li>Example-2 with approval restricted to identities</li> <li> <p>In this example the restriction is set to users 'deploy', 'admin' and group 'Administrators'.   <code>json5       {          \"MANUAL-TASKS\": {             \"type\": \"generic-manual-task\",             \"restrict-approval-to\": {                 \"identities\": {                     \"users\": [                         \"deploy\",                         \"admin\"                     ],                     \"groups\": [                         \"Administrators\"                     ]                 }             }          }         }</code></p> </li> <li> <p>Example-3 with property definitions  <code>json5         {             \"MANUAL-TASKS\": {             \"type\": \"generic-manual-task\",             \"restrict-approval-to\": {                 \"identities\": {                     \"users\": [                         \"deploy\",                         \"admin\"                     ],                     \"groups\": [                         \"Administrators\"                     ]                 }             },             \"notification-template\": \"TaskCreated\",             \"comment-required\": true,             \"comment-prompt\": \"HEY,APPROVETHIS\",             \"property-definition\": [                 {                     \"property-name\": \"TEXT-PROPERTY\",                     \"property-type\": \"text\",                     \"label\": \"DUMMY-LABEL\",                     \"description\": \"DUMMY-DESCRIPTION\",                     \"default\": \"TEXT-VALUE\"                 },                 {                     \"property-name\": \"TEXT-AREA-PROPERTY\",                     \"property-type\": \"text-area\",                     \"label\": \"TEXT-AREA-LABEL\",                     \"description\": \"TEXT-AREA-DESCRIPTION\",                     \"required\": true,                     \"default\": \"HEY-HEY\"                 },                 {                     \"property-name\": \"CHECKBOX-PROPERTY\",                     \"property-type\": \"checkbox\",                     \"label\": \"CHECKBOX-LABEL\",                     \"description\": \"CHECKBOX-DESCRIPTION\",                     \"default\": true                 },                 {                     \"property-name\": \"SELECT-PROPERTY\",                     \"property-type\": \"select\",                     \"values\": [                         {                             \"label\": \"TRUE\",                             \"selected\": true,                             \"value\": \"TRUE\"                         },                         {                             \"label\": \"FALSE\",                             \"value\": \"FALSE\"                         }                     ],                     \"label\": \"SELECT-LABEL\",                     \"description\": \"SELECT-DESCRIPTION\"                 },                 {                     \"property-name\": \"MULTI-SELECT\",                     \"property-type\": \"multi-select\",                     \"values\": [                         {                             \"label\": \"START\",                             \"selected\": true,                             \"value\": \"START\"                         },                         {                             \"label\": \"FINISH\",                             \"value\": \"FINISH\"                         },                         {                             \"label\": \"COMPLETE\",                             \"value\": \"COMPLETE\"                         }                     ],                     \"label\": \"MULTI-SELECT-LABEL\",                     \"description\": \"MULTI-SELECT-DESCRIPTION\"                 },                 {                     \"property-name\": \"SECURE-PROPERTY\",                     \"property-type\": \"secure\",                     \"label\": \"SECURE-LABEL\",                     \"description\": \"SECURE-DESCRIPTION\",                     \"default\": \"****\"                 },                 {                     \"property-name\": \"DATE-TIME-PROPERTY\",                     \"property-type\": \"date-time\",                     \"label\": \"DATE-TIME-PROPERTY-LABEL\",                     \"description\": \"DATE-TIME-PROPERTY-DESCRIPTION\",                     \"default\": \"30/08/2024 19:22\"                 }             ],             \"on\": {                 \"success\": {                     \"finish\": \"\"                 }             }          }       }</code></p> </li> </ul>"}]}